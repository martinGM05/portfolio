---
import '../styles/global.css';
import { useTranslations } from '../i18n/utils';
import type { languageList } from '../i18n/ui';

const currentLang = Astro.currentLocale || "es";

const translateLabels = useTranslations(currentLang as keyof typeof languageList);

export interface Props {
	title?: string;
	description?: string;
	image?: string;
}

const { 
	title = translateLabels('nav.home'),
	description = translateLabels('nav.description'),
	image = "/og-image.jpg"
} = Astro.props;
---
<!doctype html>
<html lang={currentLang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		
		<!-- SEO Meta Tags -->
		<title>{title}</title>
		<meta name="description" content={description} />
		<meta name="keywords" content="desarrollador full stack, portfolio, proyectos web, JavaScript, React, Node.js, Astro" />
		<meta name="author" content="Martín González Miranda" />
		
		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content="https://martingonzalez.dev/" />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={image} />
		
		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content="https://martingonzalez.dev/" />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content={image} />
		
		<!-- Additional SEO -->
		<link rel="canonical" href="https://martingonzalez.dev/" />
		<meta name="robots" content="index, follow" />
		<meta name="theme-color" content="#3b82f6" />
		
		<!-- Preload critical resources -->
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
	</head>
	<body class="font-inter bg-primary text-primary antialiased" data-theme="light">
		<slot />
		
		<!-- Theme Toggle Script -->
		<script>
			// Theme management
			const themeToggle = document.getElementById('theme-toggle');
			const html = document.documentElement;
			
			// Get saved theme or default to light
			const savedTheme = localStorage.getItem('theme') || 'light';
			html.setAttribute('data-theme', savedTheme);
			
			// Theme toggle functionality
			function toggleTheme() {
				const currentTheme = html.getAttribute('data-theme');
				const newTheme = currentTheme === 'light' ? 'dark' : 'light';
				
				html.setAttribute('data-theme', newTheme);
				localStorage.setItem('theme', newTheme);
				
				// Update both toggle button icons
				const iconSvg = newTheme === 'light' 
					? '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"/>'
					: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"/>';
				
				// Update desktop toggle
				const desktopToggle = document.getElementById('theme-toggle');
				if (desktopToggle) {
					const icon = desktopToggle.querySelector('svg');
					if (icon) {
						icon.innerHTML = iconSvg;
					}
				}
				
				// Update mobile toggle
				const mobileToggle = document.getElementById('theme-toggle-mobile');
				if (mobileToggle) {
					const icon = mobileToggle.querySelector('svg');
					if (icon) {
						icon.innerHTML = iconSvg;
					}
				}
			}
			
			// Add event listener when DOM is loaded
			document.addEventListener('DOMContentLoaded', function() {
				const toggle = document.getElementById('theme-toggle');
				const toggleMobile = document.getElementById('theme-toggle-mobile');
				
				// Initialize icons for both toggles
				const currentTheme = html.getAttribute('data-theme');
				const iconSvg = currentTheme === 'light' 
					? '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"/>'
					: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"/>';
				
				if (toggle) {
					const icon = toggle.querySelector('svg');
					if (icon) {
						icon.innerHTML = iconSvg;
					}
					toggle.addEventListener('click', toggleTheme);
				}
				
				if (toggleMobile) {
					const icon = toggleMobile.querySelector('svg');
					if (icon) {
						icon.innerHTML = iconSvg;
					}
					toggleMobile.addEventListener('click', toggleTheme);
				}
			});
		</script>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
